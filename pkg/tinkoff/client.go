package tinkoff

//go:generate ifacemaker -f client.go -p tinkoff -s Client -i API -o api.go -y "API interface for tinkoff client" -c "Code generated by ifacemaker. DO NOT EDIT."

import (
	"context"
	sdk "github.com/TinkoffCreditSystems/invest-openapi-go-sdk"
)

type Portfolio sdk.Portfolio

type Client struct {
	cli *sdk.RestClient
}

func NewClient(token string) *Client {
	return &Client{
		cli: sdk.NewRestClient(token),
	}
}

func (c Client) GetPortfolio(ctx context.Context, accountID string) (Portfolio, error) {
	p, err := c.cli.Portfolio(ctx, accountID)
	return Portfolio(p), err
}

type Account sdk.Account

func (c Client) GetAccounts(ctx context.Context) ([]Account, error) {
	a, err := c.cli.Accounts(ctx)
	if err != nil {
		return nil, err
	}

	accounts := make([]Account, len(a))

	for i := range a {
		accounts[i] = Account(a[i])
	}

	return accounts, nil
}
